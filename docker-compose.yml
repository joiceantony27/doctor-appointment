version: '3.8'

services:
  db:
    image: postgres:15
    container_name: doctor_appointment_db
    environment:
      POSTGRES_DB: doctor_appointment_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - doctor_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: doctor_appointment_redis
    ports:
      - "6379:6379"
    networks:
      - doctor_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build: .
    container_name: doctor_appointment_web
    environment:
      - DJANGO_SETTINGS_MODULE=doctor_appointment.settings_prod
      - SECRET_KEY=your-production-secret-key-change-this
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=doctor_appointment_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - doctor_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: doctor_appointment_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    networks:
      - doctor_network
    restart: unless-stopped

  celery:
    build: .
    container_name: doctor_appointment_celery
    command: celery -A doctor_appointment worker -l info
    environment:
      - DJANGO_SETTINGS_MODULE=doctor_appointment.settings_prod
      - SECRET_KEY=your-production-secret-key-change-this
      - DEBUG=False
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=doctor_appointment_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    networks:
      - doctor_network
    restart: unless-stopped

  celery-beat:
    build: .
    container_name: doctor_appointment_celery_beat
    command: celery -A doctor_appointment beat -l info
    environment:
      - DJANGO_SETTINGS_MODULE=doctor_appointment.settings_prod
      - SECRET_KEY=your-production-secret-key-change-this
      - DEBUG=False
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=doctor_appointment_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    networks:
      - doctor_network
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  doctor_network:
    driver: bridge
